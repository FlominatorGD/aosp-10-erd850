/*
 * Copyright (C) 2017 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package vendor.samsung_slsi.telephony.hardware.radio@1.0;

import android.hardware.radio@1.0::types;

/**
 * (TBD)
 */
interface IOemSamsungslsiIndication {

   /**
    * This is for OEM specific use.
    *
    * @param type Type of radio indication
    * @param data data passed as raw bytes
    */
   oneway oemHookRaw(RadioIndicationType type, vec<uint8_t> data);

   /**
    * (TBD)
    *
    */
   oneway suppSvcReturnResult(RadioIndicationType type, string result);

   /**
    * (TBD)
    *
    */
   oneway callPresentInd(RadioIndicationType type);

   /**
    * (TBD)
    *
    */
   oneway wbAmrReportInd(RadioIndicationType type, bool on);

   /**
    * (TBD)
    *
    */
   oneway vsimOperationInd(RadioIndicationType type, VsimOperationEvent event);

   /**
    * (TBD)
    *
    */
   oneway nasTimerStatusInd(RadioIndicationType type, NasTimerStatus status);

   /**
    * (TBD)
    *
    */
   oneway emergencyActInd(RadioIndicationType type, int32_t act, int32_t status);

    /**
     * Indicates when a new USSD message is received.
     * The USSD session is assumed to persist if the type code is REQUEST, otherwise
     * the current session (if any) is assumed to have terminated.
     *
     * @param type Type of radio indication
     * @param modeType USSD type code
     * @param msg Message string in UTF-8, if applicable
     * @param dcs
     */
    oneway onUssdWithDcsInd(RadioIndicationType type, string modeType, string msg, string dcs);

    /**
    * (TBD)
    *
    */
   oneway volteAvailableInfoInd(RadioIndicationType type, int32_t volteAvailable, int32_t emcAvailable);

    /**
    * (TBD)
    *
    */
   oneway iccIdInfoInd(RadioIndicationType type, string iccidInfo);

   oneway emergencySupportRatModeInd(RadioIndicationType type, int32_t supportRatMode);

    /**
     * (TBD)
     *
     */
    oneway ussdCanceledInd(RadioIndicationType indicationType);
};
