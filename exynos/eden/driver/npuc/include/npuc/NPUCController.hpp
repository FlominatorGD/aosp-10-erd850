#ifndef __NPUCOMPILATION_HPP__
#define __NPUCOMPILATION_HPP__

#include <memory>

#include "CompileOptions.h"
#include "capability/NPUCtype.h"
#include "nnmodel/NNNetwork.h"
#include "CompilerOptions.h"
#include "Logging.h"

namespace NPUC
{

/**
 * @brief A controller calss for NPU compiler
 */
class NPUCController
{
public:
#ifdef OFFLINE_COMPILER
   NPUCController() {};
#else
   NPUCController(NPUCCompilerOptions *options) : _options(options) {};
#endif
   ~NPUCController() {};

public:

#ifdef OFFLINE_COMPILER
  /**
   * @brief A function to do an NPU compilation for offline compiler
   * @param[in] options Compile options
   * @retval int indicate succeed or fail
   */
   int run();
#else
  /**
   * @brief A function to do an NPU compilation for ondevice compiler
   * @param[in] net an NNNNetwork that is generted by a converter (convert AndroidNN to NNNetwork)
   * @param[out] ncpBuffer a buffer for ncp binary that is generated by this NPUcompiler
   * @retval int indicate succeed or fail
   */
   int run(NPUC::NNNetwork *net, NPUC::NCPBuffer *ncpBuffer);
#endif

#ifdef ONDEVICE_COMPILER
private:
   void setCompileOptions();

private:
   NPUCCompilerOptions *_options;
#endif

};

} // namespace NPUC

#endif // __NPUCOMPILATION_HPP__


